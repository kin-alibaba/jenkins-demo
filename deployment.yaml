apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  labels:
    app: mysql-demo
  name: mysql-demo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-demo
  template:
    metadata:
      labels:
        app: mysql-demo
    spec:
      containers:
        - env:
            - name: MYSQL_MAJOR
              value: '5.7'
            - name: MYSQL_ROOT_PASSWORD
              value: 'Password#3'
            - name: MYSQL_DATABASE
              value: demodb
          image: 'mysql:5.7.25'
          imagePullPolicy: IfNotPresent
          name: mysql-demo
          ports:
            - containerPort: 3306
              protocol: TCP
            - containerPort: 33060
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: volume-image-0
      volumes:
        - hostPath:
            path: /var/lib/mysql
            type: ''
          name: volume-image-0
---

apiVersion: v1
kind: Service
metadata:
  name: mysql-demo-svc
  namespace: default
spec:
  ports:
    - name: mysql-demo-svc-3306-3306
      port: 3306
      protocol: TCP
      targetPort: 3306
    - name: mysql-demo-svc-33060-33060
      port: 33060
      protocol: TCP
      targetPort: 33060
  selector:
    app: mysql-demo
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-java-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prometheus-java-demo
  template:
    metadata:
      labels:
        app: prometheus-java-demo
    spec:
      containers:
      - name: prometheus-java-demo
        image: ${ORIGIN_REPO}/${REPO}:${IMAGE_TAG}
        env:
        - name: MYSQL_HOST
          value: mysql-demo-svc
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASS
          value: 'Password#3'
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
      imagePullSecrets:
      - name: kin-acr
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: jenkins-java-demo
#spec:
#  ports:
#  - port: 80
#    targetPort: 8080
#    name: jenkins-java-demo
#  selector:
#    app: jenkins-java-demo
#  type: LoadBalancer
